{"ast":null,"code":"import _objectSpread from\"/Users/billcoury/Desktop/click/react-memory-game/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/billcoury/Desktop/click/react-memory-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/billcoury/Desktop/click/react-memory-game/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/billcoury/Desktop/click/react-memory-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/billcoury/Desktop/click/react-memory-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/billcoury/Desktop/click/react-memory-game/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Header from'../Header';import Footer from'../Footer';import Container from'../Container';import Card from'../Card/Card';import data from'../../cards.json';var Game=/*#__PURE__*/function(_Component){_inherits(Game,_Component);function Game(){var _getPrototypeOf2;var _this;_classCallCheck(this,Game);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Game)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={data:data,score:0,bestScore:0};_this.handleCorrectGuess=function(newData){var _this$state=_this.state,bestScore=_this$state.bestScore,score=_this$state.score;var newScore=score+1;var newBestScore=newScore>bestScore?newScore:bestScore;_this.setState({data:_this.shuffleDeck(newData),score:newScore,bestScore:newBestScore});};_this.handleIncorrectGuess=function(data){_this.setState({data:_this.resetGame(data),score:0});};_this.handleCardClick=function(id){var correctGuess=false;var newData=_this.state.data.map(function(item){var newitem=_objectSpread({},item);if(newitem.id===id){if(!newitem.clicked){newitem.clicked=true;correctGuess=true;}}return newitem;});correctGuess?_this.handleCorrectGuess(newData):_this.handleIncorrectGuess(newData);};_this.resetGame=function(data){var resetGame=data.map(function(item){return _objectSpread({},item,{clicked:false});});return _this.shuffleDeck(resetGame);};_this.shuffleDeck=function(data){var i=data.length-1;while(i>0){var j=Math.floor(Math.random()*(i+1));var temp=data[i];data[i]=data[j];data[j]=temp;i--;}return data;};return _this;}_createClass(Game,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({data:this.shuffleDeck(this.state.data)});}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(Header,{score:this.state.score,bestScore:this.state.bestScore}),React.createElement(Container,null,this.state.data.map(function(item){return React.createElement(Card,{key:item.id,id:item.id,handleClick:_this2.handleCardClick,image:item.image});})),React.createElement(Footer,null));}}]);return Game;}(Component);export default Game;","map":{"version":3,"sources":["/Users/billcoury/Desktop/click/react-memory-game/src/components/Game/Game.js"],"names":["React","Component","Header","Footer","Container","Card","data","Game","state","score","bestScore","handleCorrectGuess","newData","newScore","newBestScore","setState","shuffleDeck","handleIncorrectGuess","resetGame","handleCardClick","id","correctGuess","map","item","newitem","clicked","i","length","j","Math","floor","random","temp","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport Container from '../Container';\nimport Card from '../Card/Card';\nimport data from '../../cards.json'\n\nclass Game extends Component {\n    state = {\n        data,\n        score: 0,\n        bestScore: 0,\n    };\n\n    componentDidMount() {\n        this.setState({ data: this.shuffleDeck(this.state.data) });\n    }\n\n    handleCorrectGuess = newData => {\n        const { bestScore, score } = this.state;\n        const newScore = score + 1;\n        const newBestScore = newScore > bestScore ? newScore : bestScore;\n        this.setState({\n            data: this.shuffleDeck(newData),\n            score: newScore,\n            bestScore: newBestScore,\n        });\n    }\n\n    handleIncorrectGuess = data => {\n        this.setState({\n            data: this.resetGame(data),\n            score: 0,\n        });\n    }\n\n    handleCardClick = id => {\n        let correctGuess = false;\n\n        const newData = this.state.data.map(item => {\n            const newitem = { ...item };\n            if (newitem.id === id) {\n                if (!newitem.clicked) {\n                    newitem.clicked = true;\n                    correctGuess = true;\n                }\n            }\n            return newitem;\n        });\n        correctGuess ? this.handleCorrectGuess(newData) : this.handleIncorrectGuess(newData);\n    };\n\n    resetGame = data => {\n        const resetGame = data.map(item => ({ ...item, clicked: false }));\n        return this.shuffleDeck(resetGame);\n    }\n\n    shuffleDeck= data => {\n        let i = data.length - 1;\n        while (i > 0) {\n            const j = Math.floor(Math.random() * (i + 1));\n            const temp = data[i];\n            data[i] = data[j];\n            data[j] = temp;\n            i--;\n        }\n        return data;\n    };\n\n    render() {\n        return(\n            <div>\n                <Header score={this.state.score} bestScore={this.state.bestScore} />\n                <Container>\n                    {this.state.data.map(item => (\n                        <Card\n                            key={item.id}\n                            id={item.id}\n                            handleClick={this.handleCardClick}\n                            image={item.image}\n                        />\n                    ))}\n                </Container>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}